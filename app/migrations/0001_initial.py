# Generated by Django 3.0.1 on 2022-04-24 11:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=30)),
                ('describe', models.CharField(max_length=1000)),
                ('joindate', models.DateField(auto_now_add=True)),
                ('image_1', models.ImageField(upload_to='product image/')),
                ('image_2', models.ImageField(upload_to='product image/')),
                ('image_3', models.ImageField(upload_to='product image/')),
                ('image_4', models.ImageField(upload_to='product image/')),
                ('garden', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=30)),
                ('price', models.IntegerField(verbose_name=5)),
                ('price_per_quantity', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('stock', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
            ],
        ),
        migrations.CreateModel(
            name='RequestFertilizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('gender', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=500)),
                ('fertilizer', models.CharField(max_length=20)),
                ('quantity', models.IntegerField(verbose_name=5)),
                ('requeston', models.DateField(auto_now_add=True)),
                ('approve', models.BooleanField(default=False)),
                ('reject', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RequestSeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('gender', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=500)),
                ('crop', models.CharField(max_length=20)),
                ('quantity', models.IntegerField(verbose_name=5)),
                ('requeston', models.DateField(auto_now_add=True)),
                ('approve', models.BooleanField(default=False)),
                ('reject', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Soil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joindate', models.DateField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SoilLocationDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addon', models.DateField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('region', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Region')),
                ('soil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Soil')),
            ],
        ),
        migrations.CreateModel(
            name='SoilDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.CharField(max_length=500)),
                ('crop', models.CharField(max_length=250)),
                ('soil', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Soil')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joindate', models.DateField(auto_now_add=True)),
                ('garden', models.CharField(max_length=50, unique=True)),
                ('logo', models.ImageField(upload_to='seller logo/')),
                ('email', models.EmailField(max_length=254)),
                ('describe', models.CharField(max_length=1000)),
                ('address', models.CharField(max_length=500)),
                ('gender', models.CharField(max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RainfallDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rainfall', models.FloatField()),
                ('addon', models.DateField(auto_now_add=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Year')),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joindate', models.DateField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(max_length=20)),
                ('answer', models.CharField(max_length=100)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CropDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_rainfall', models.FloatField(verbose_name=10)),
                ('max_rainfall', models.FloatField(verbose_name=10)),
                ('detail', models.CharField(max_length=500)),
                ('status', models.BooleanField(default=False)),
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Crop')),
                ('soil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Soil')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joindate', models.DateField(auto_now_add=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(max_length=20)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.District')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
